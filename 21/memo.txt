// B += A
def f(B, A):
	_c = 0
	// N = 0 ~ 7
	if(_AN ^ _c) _c = _BN, _BN ^= 1


N(A) -> X or Y
: N에서 A가 0이면 Y, 아니면 X로 jump


S 값 변화 그래프
0 -> 24~28 -> 29~31(B) -> 32 or 56
	32~37 -> 12~13 -> 14(X) -> 15 or 22
		15~17(Z) -> 18 or 19
			18 -> 19~21 -> 14
			19~21 -> 14

		22~23 -> 1~5(R) -> 6 or 38
			6~7(R) -> 8 or 59
				8~9(R) -> 10 or 59
					10~11 -> -1			10: BUG?
					59 -> NO
				59 -> NO
			
			38~55 -> 29~31(B) -> 32 or 56
				56(Q) -> 57 or 58
					57 -> NO
					58 -> YES

	56(Q) -> 57 or 58
		57 -> NO
		58 -> YES



// 그래프 -> 코드
// 24~28
I = 0
M = 0
N = 1
P = 0
Q = 0

// 29~31
B = 0b11100101
f(B, I)

while(B) {
	// 32~37
	B = 0b10000000
	f(B, I)
	A = ROM[B]
	B = ROM[I]
	R = 1
	// jmp 12

	// 12~13
	X = 1
	Y = 0

	// 14(X) -> 15 -> ... -> 14
	while(X) {
		Z = X
		Z &= B
		if(Z)	f(Y, A)
		f(X, X)
		f(A, A)
	}

	// 22~23 -> 1~5
	A = Y
	R = ~R
	Z = 1
	f(R, Z)
	f(R, Z)

	// 5
	if(R) {
		// 6~

		f(R, Z)
		// 7
		if(R) {
			f(R, Z)
			// 9
			if(R) {
				// BUG
				// goto -1
			}
			else	// NO
		}
		else	// NO

		break
	}
	else {
		// 38
		O = M
		f(O, N)
		M = N
		N = O
		f(A, M)
		B = 0b00100000
		f(B, I)
		C = ROM[B]
		A ^= C
		f(P, A)
		B = 0b01000000
		f(B, I)
		A = ROM[B]
		A ^= P
		Q |= A
		A = 1
		f(I, A)

		B = 0b11100101
		f(B, I)
	}
}
// 56
if(!Q)	// YES
else	// NO



I = 0, M = 0, N = 1, P = 0, Q = 0
B = 0b11100101 + I

while(B) {
	A = ROM[0b10000000 + I]	// FLAG[I]
	B = ROM[I]

	X = 1
	Y = 0

	// Y = FLAG[I] * ROM[I]
	while(X) {
		if(B & X)	Y += A
		X += X
		A += A
	}

	A = Y
	Z = 1

	R = 1
	R = ~R
	R += 1
	R += 1
	// ~1 + 1 == -1
	// ~1 + 1 + 1 == 0
	if(R) {
		R += Z
		if(R) {
			R += Z
			if(R) {
				// BUG
				// goto -1
			}
			else	// NO
		}
		else	// NO

		break
	}
	else {
		O = M + N
		M = N
		N = O
		A += M

		B = 0b00100000 + I
		C = ROM[B]
		A ^= C
		P += A

		B = 0b01000000 + I
		A = ROM[B]
		A ^= P
		Q |= A
		A = 1
		I += 1

		B = 0b11100101 + I
	}
}
if(!Q)	// YES
else	// NO
